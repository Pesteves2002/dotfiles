# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Firacode-regular 10

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

exec --no-startup-id nitrogen --restore

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.
exec_always --no-startup-id autorandr --change && feh --bg-scale --no-fehbg "$HOME/dotfiles/wallpapers/6.jpg"

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock --i3lock --nofork -i ~/Pictures/lockscreen.png

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Polybar
exec_always --no-startup-id ~/dotfiles/polybar/launch_polybar.sh &

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% 
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% 
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle       
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# kill focused window
bindsym $mod+q kill

# lock screen
bindsym $mod+x exec --no-startup-id ~/.config/i3/scripts/lockScreen.sh

# start a terminal
bindsym $mod+Return exec alacritty

# move around the workspace (alt + tab)
bindsym Mod1+Tab workspace next
bindsym Mod1+Shift+Tab workspace prev

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# flameshot
bindsym Print exec flameshot gui

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run

# A more modern dmenu replacement is rofi:
bindsym $mod+d exec --no-startup-id ~/.config/rofi/launchers/type-3/launcher.sh

# start rofi power menu
bindsym $mod+BackSpace exec --no-startup-id ~/.config/rofi/scripts/powermenu_t1

# start rofi-calc
bindsym $mod+c exec --no-startup-id rofi -show calc -modi calc -no-show-match -no-sort

# change focus
bindsym $mod+h     focus left
bindsym $mod+j     focus down
bindsym $mod+k     focus up
bindsym $mod+l     focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left  focus left
bindsym $mod+Down  focus down
bindsym $mod+Up    focus up
bindsym $mod+Right focus right

# change workspace monitor
bindsym $mod+Shift+h     move workspace to output left
bindsym $mod+Shift+j     move workspace to output down
bindsym $mod+Shift+k     move workspace to output up
bindsym $mod+Shift+l     move workspace to output right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left  move workspace to output left
bindsym $mod+Shift+Down  move workspace to output down
bindsym $mod+Shift+Up    move workspace to output up
bindsym $mod+Shift+Right move workspace to output right

# orientation for new workspaces
default_orientation horizontal

# split toggle
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Escape floating toggle

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# music controls
bindsym Ctrl+space       exec playerctl play-pause
bindsym Ctrl+shift+Left  exec playerctl previous
bindsym Ctrl+shift+Right exec playerctl next

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # change focus
    bindsym $mod+h focus left
    bindsym $mod+j focus down
    bindsym $mod+k focus up
    bindsym $mod+l focus right

    # alternatively, you can use the cursor keys:
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym h     resize shrink width 10 px or 10 ppt
    bindsym j     resize grow height 10 px or 10 ppt
    bindsym k     resize shrink height 10 px or 10 ppt
    bindsym l     resize grow width 10 px or 10 ppt
        
    # same bindings, but for the arrow keys
    bindsym Left  resize shrink width 10 px or 10 ppt
    bindsym Down  resize grow height 10 px or 10 ppt
    bindsym Up    resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Move containers in workspace
mode "move" {

    # change focus
    bindsym $mod+h focus left
    bindsym $mod+j focus down
    bindsym $mod+k focus up
    bindsym $mod+l focus right

    # alternatively, you can use the cursor keys:
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # move focused container
    bindsym h move left
    bindsym j move down
    bindsym k move up
    bindsym l move right

    # same bindings, but for the arrow keys
    bindsym Left move left
    bindsym Down move down
    bindsym Up move up
    bindsym Right move right

    # split toggle
    bindsym $mod+e layout toggle split

    # back to normal: Enter or Escape or $mod+m
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+m mode "default"
}

bindsym $mod+m mode "move"

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1  "1"
set $ws2  "2"
set $ws3  "3"
set $ws4  "4"
set $ws5  "5"
set $ws6  "6"
set $ws7  "7"
set $ws8  "8"
set $ws9  "9"
set $ws10 "10"

set $terminal "1: "
set $google   "2: "
set $discord  "3: "
set $vscode   "4: "
set $Intellij "5: "
set $cider    "6: "

assign [class="Alacritty|alacritty"]                           → $terminal
assign [class="Google-chrome|google-chrome"]                   → $google
assign [class="Firefox|firefox"]                               → $google
assign [class="Discord|discord"]                               → $discord
assign [class="Code|code"]                                     → $vscode
assign [class="Intellij-idea-ultimate-edition|jetbrains-idea"] → $Intellij
assign [class="Cider|cider"]                                   → $cider

# switch to workspace
bindsym $mod+1 workspace number $terminal
bindsym $mod+2 workspace number $google
bindsym $mod+3 workspace number $discord
bindsym $mod+4 workspace number $vscode
bindsym $mod+5 workspace number $Intellij
bindsym $mod+6 workspace number $cider
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $terminal
bindsym $mod+Shift+2 move container to workspace number $google
bindsym $mod+Shift+3 move container to workspace number $discord
bindsym $mod+Shift+4 move container to workspace number $vscode
bindsym $mod+Shift+5 move container to workspace number $Intellij
bindsym $mod+Shift+6 move container to workspace number $cider
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Add workspace back and forth
workspace_auto_back_and_forth yes

# Window color settings
# class                 border  backgr. text    indicator
client.focused          #aaaaaa #aaaaaa #aaaaaa #aaaaaa
client.unfocused        #222222 #222222 #aaaaaa #222222
client.focused_inactive #222222 #222222 #a9a9a9 #222222
client.placeholder      #222222 #222222 #aaaaaa #222222
client.urgent           #dcbcff #dcbcff #d7d7d7 #dcbcff

client.background       #242424

# test #ab9c84

#--floating pop up automatically
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# brightness
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set 150+ # increase screen brightness
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 150- # decrease screen brightness

# Autostart programs

# Autotiling
# exec_always --no-startup-id autotiling

# Alacritty
exec --no-startup-id alacritty

# Discord
exec --no-startup-id discord

# Firefox
exec --no-startup-id "sleep 3; firefox"

# VS Code
#exec --no-startup-id code

# Intellij
#exec --no-startup-id intellij-idea-ultimate-edition

# stolen from gaspar files

# exec_always --no-startup-id picom --experimental-backends --config ~/.config/picom/picom.conf

# Borders

new_window normal

new_float normal

default_border pixel 1

default_floating_border pixel 1

# i3 gaps
for_window [class="^.*"] border pixel 2
gaps inner 12
gaps outer 12
gaps top 3
gaps bottom 3
smart_gaps on
smart_borders on
